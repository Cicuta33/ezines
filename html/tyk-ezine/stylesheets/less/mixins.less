//////////////////////////////////////////////////////////////////////////////////////////////
//	==========================================================================================
//	mixins
//	==========================================================================================
//	Mixins to bootstrap development of project (a bit based on: http://markdotto.com/bootstrap/)
//	==========================================================================================
//////////////////////////////////////////////////////////////////////////////////////////////

		// Core variables and mixins
@import url("variables.less"); // Modify this for custom colors, font-sizes, etc.


//	==========================================================================================
//	Mixins
//	==========================================================================================

	// Center-align a block level element
.center-block(@top: 0, @bottom: 0) {
	display: block;
	margin: @top auto @bottom;
}

	// Sizing shortcut
.size(@height: 5px, @width: 5px) {
	height: @height;
	width: @width;
}

	.square(@size: 5px) {
		.size(@size, @size);
	}

	// Input placeholder text
.placeholder(@color: @grayLight) {
	:-moz-placeholder {
		color: @color;
  	}
  	::-webkit-input-placeholder {
    	color: @color;
  	}
}

	// Clearfix (http://nicolasgallagher.com/micro-clearfix-hack/)
.clearfix() {
	zoom: 1;
	&:before, &:after {
    	display: table;
    	content: "";
	}
	&:after {
    	clear: both;
	}
}

//	==========================================================================================

	// Border Radius
		// NOTE:	The four values for each radii are given in the order: top-left, top-right, bottom-right, bottom-left.
.border-radius(@radius: 4px) {
	-webkit-border-radius: @radius;
	   -moz-border-radius: @radius;
	        border-radius: @radius;
}

//	==========================================================================================

	// Drop shadows
.box-shadow(@x: 3px, @y: 3px, @blur: 6px, @spread: 0, @color: rgba(0,0,0,.6)) {
	-webkit-box-shadow: @x @y @blur @spread @color;
	   -moz-box-shadow: @x @y @blur @spread @color;
			box-shadow: @x @y @blur @spread @color;
}

//	==========================================================================================

	// Text shadow
.text-shadow(@x: 1px, @y: 1px, @blur: 2px, @color: rgba(0,0,0,.6)) {
	text-shadow: @x @y @blur @color;
}

//	==========================================================================================

	// Transitions
.transition(@property: all, @duration: 1s, @easing: ease-in-out) {
	-webkit-transition: @property @duration @easing;
	   -moz-transition: @property @duration @easing;
		-ms-transition: @property @duration @easing; // IE10?
	     -o-transition: @property @duration @easing;
		  	transition: @property @duration @easing;
}

//	==========================================================================================

	// Transform
		// VALUES:	translate(x,y) | translate3d(x,y,z) | scale(x,y) | scale3d(x,y,z) | rotate(angle) | rotate3d(x,y,z,angle) | skew(x-angle,y-angle) | perspective(n)
		// NOTE:	The transform property applies a 2D or 3D transformation to an element. This property allows you to rotate, scale, move, skew, etc., elements.
.transform(@params) {
	-webkit-transform: @params;
	   -moz-transform: @params;	// 2D transforms only
		-ms-transform: @params;	// 2D transforms only
		 -o-transform: @params;	// 2D transforms only
	        transform: @params;
}

	// Rotate
.rotate(@deg: 10deg) {
	-webkit-transform: rotate(@deg);
	   -moz-transform: rotate(@deg);
	 	-ms-transform: rotate(@deg);
	     -o-transform: rotate(@deg);
	        transform: rotate(@deg);
}

	// Skew
.skew(@deg: 10deg) {
	-webkit-transform: rotate(@deg);
	   -moz-transform: rotate(@deg);
	 	-ms-transform: rotate(@deg);
	     -o-transform: rotate(@deg);
	        transform: rotate(@deg);
}

	// Scale
.scale(@x: 2, @y: 2) {
	-webkit-transform: scale(@x, @y);
	   -moz-transform: scale(@x, @y);
	    -ms-transform: scale(@x, @y);
	     -o-transform: scale(@x, @y);
	        transform: scale(@x, @y);
}

	// Scale + Rotate
.scale-rotate(@mod, @deg) {
	-webkit-transform: scale(@mod) rotate(@deg);
	   -moz-transform: scale(@mod) rotate(@deg);
	    -ms-transform: scale(@mod) rotate(@deg);
	     -o-transform: scale(@mod) rotate(@deg);
	        transform: scale(@mod) rotate(@deg);
}

//	==========================================================================================

	// Resize
		// VALUES:	none (default) | both | horizontal | vertical
		// NOTE:	Applies to elements with 'overflow' other than visible.
.resize(
		@direction: horizontal
	) {
		-webkit-resize: @direction;
		   -moz-resize: @direction;
		        resize: @direction;
}

//	==========================================================================================

	// Background origin
		// VALUES:	padding-box (default) | border-box | content-box
		// NOTE:	If the background-attachment property for the background image is "fixed", this property has no effect.
.background-origin(@origin) {
	-webkit-background-origin: @origin;
	   -moz-background-origin: @origin;
	        background-origin: @origin;
}

	// Background clipping
		// VALUES:	border-box (default) | padding-box | content-box
		// NOTE:	The background-clip property specifies the painting area of the background.
.background-clip(@clip) {
	-webkit-background-clip: @clip;
	   -moz-background-clip: @clip;
	        background-clip: @clip;
}

	// Background origin + clipping
.background-origin-clip(@origin, @clip) {
	-webkit-background-origin: @origin;
	   -moz-background-origin: @origin;
	        background-origin: @origin;
	  -webkit-background-clip: @clip;
	     -moz-background-clip: @clip;
	          background-clip: @clip;
}

//	==========================================================================================

	// Columns
		// columnCount VALUES:	auto (default) | [number]
		// columnWidth VALUES:	auto (default) | [lenght]
		// columnGap VALUES:	normal (default) | [lenght]
.columns(@columnCount, @columnWidth, @columnGap: 1em) {
	-webkit-column-count: @columnCount;
	   -moz-column-count: @columnCount;
			column-count: @columnCount;
	-webkit-column-width: @columnWidth;
	   -moz-column-width: @columnWidth;
			column-width: @columnWidth;
	  -webkit-column-gap: @columnGap;
		 -moz-column-gap: @columnGap;
			  column-gap: @columnGap;
}

	// Column rules
		// NOTE:	The column-rule property sets the width, style, and color of the rule between columns.
.column-rule(@columnRuleColor: @gray, @columnRuleStyle: solid, @columnRuleWidth: 1px) {
	-webkit-column-rule-color: @columnRuleColor;
	   -moz-column-rule-color: @columnRuleColor;
		 	column-rule-color: @columnRuleColor;
	-webkit-column-rule-style: @columnRuleStyle;
	   -moz-column-rule-style: @columnRuleStyle;
		 	column-rule-style: @columnRuleStyle;
	-webkit-column-rule-width: @columnRuleWidth;
	   -moz-column-rule-width: @columnRuleWidth;
		 	column-rule-width: @columnRuleWidth;
}

////////////////////////////////////////////////////////////////

	// Box display
		// boxOrient VALUES:	inline-axis (default) | horizontal | vertical | block-axis | inherit
		// boxPack VALUES:		start (default) | end | center | justify
		// baxAlign VALUES:		stretch (default) | start | end | center | baseline
.box(@boxOrient: horizontal, @boxPack: center, @boxAlign: center) {
		display: -webkit-box;
		   display: -moz-box;
		     display: -o-box;
				display: box;
		-webkit-box-orient: @boxOrient;
		   -moz-box-orient: @boxOrient;
			-ms-box-orient: @boxOrient;
			 -o-box-orient: @boxOrient;
				box-orient: @boxOrient;
		  -webkit-box-pack: @boxPack;
			 -moz-box-pack: @boxPack;
			  -ms-box-pack: @boxPack;
			   -o-box-pack: @boxPack;
				  box-pack: @boxPack;
		 -webkit-box-align: @boxAlign;
			-moz-box-align: @boxAlign;
			 -ms-box-align: @boxAlign;
			  -o-box-align: @boxAlign;
				 box-align: @boxAlign;
}

	// Box flex
		// VALUES:	0 (default) | [value]
		// NOTE:	The flexibility of the element â€” all flex is relative, e.g. a child with a box-flex of 2 is twice as flexible as a child with a box-flex of 1.
.box-flex(@val: 1) {
	-webkit-box-flex: @val;
	   -moz-box-flex: @val;
	    -ms-box-flex: @val;
	     -o-box-flex: @val;
	        box-flex: @val;
}

	// Box sizing
		// VALUES:	content-box (default) | border-box | inherit
		// NOTE:	The box-sizing property allows you to define certain elements to fit an area in a certain way.
.box-sizing(@type: border-box) {
	-webkit-box-sizing: @type;
	   -moz-box-sizing: @type;
		-ms-box-sizing: @type;
	   	 -o-box-sizing: @type;
	        box-sizing: @type;
}

//	==========================================================================================

	// Gradients
#gradient {
	.horizontal(@startColor: @grayDark, @endColor: @gray) {
		background-color: @endColor;
		background-repeat: repeat-x;
		background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, @startColor), color-stop(100%, @endColor)); // Safari 4+, Chrome 2+
		background-image: -webkit-linear-gradient(left, @startColor, @endColor); // Safari 5.1+, Chrome 10+
		background-image: -moz-linear-gradient(left, @startColor, @endColor); // FF 3.6+
		background-image: -ms-linear-gradient(left, @startColor, @endColor); // IE10
		background-image: -o-linear-gradient(left, @startColor, @endColor); // Opera 11.10
		background-image: -khtml-gradient(linear, left top, right top, from(@startColor), to(@endColor)); // Konqueror
		background-image: linear-gradient(left, @startColor, @endColor); // Le standard
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",@startColor,@endColor)); // IE9 and down
	}
	.vertical(@startColor: @grayDark, @endColor: @gray) {
		background-color: @endColor;
		background-repeat: repeat-x;
		background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, @startColor), color-stop(100%, @endColor)); // Safari 4+, Chrome 2+
		background-image: -webkit-linear-gradient(top, @startColor, @endColor); // Safari 5.1+, Chrome 10+
		background-image: -moz-linear-gradient(top, @startColor, @endColor); // FF 3.6+
		background-image: -ms-linear-gradient(top, @startColor, @endColor); // IE10
		background-image: -o-linear-gradient(top, @startColor, @endColor); // Opera 11.10
		background-image: -khtml-gradient(linear, left top, left bottom, from(@startColor), to(@endColor)); // Konqueror
		background-image: linear-gradient(top, @startColor, @endColor); // The standard
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@startColor,@endColor)); // IE9 and down
	}
	.directional(@startColor: @grayDark, @endColor: @gray, @deg: 45deg) {
		background-color: @endColor;
		background-repeat: repeat-x;
		background-image: -webkit-linear-gradient(@deg, @startColor, @endColor); // Safari 5.1+, Chrome 10+
		background-image: -moz-linear-gradient(@deg, @startColor, @endColor); // FF 3.6+
		background-image: -ms-linear-gradient(@deg, @startColor, @endColor); // IE10
		background-image: -o-linear-gradient(@deg, @startColor, @endColor); // Opera 11.10
		background-image: linear-gradient(@deg, @startColor, @endColor); // The standard
	}
	.vertical-three-colors(@startColor: @blue, @midColor: @purple, @colorStop: 50%, @endColor: @pink) {
		background-color: @endColor;
		background-repeat: no-repeat;
		background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
		background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);
		background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop, @endColor);
		background-image: -ms-linear-gradient(@startColor, @midColor @colorStop, @endColor);
		background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);
		background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@startColor,@endColor)); // IE9 and down, gets no color-stop at all for proper fallback
	}
}

//	==========================================================================================

	// Gradient bar colors for buttons and allerts
.gradient-bar(@primaryColor, @secondaryColor) {
	#gradient > .vertical(@primaryColor, @secondaryColor);
	text-shadow: 0 -1px 0 rgba(0,0,0,.25);
	border-color: @secondaryColor @secondaryColor darken(@secondaryColor, 15%);
	border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%);
}

//	==========================================================================================

	// Add an alphatransparency value to any background or border color
#translucent {
	.background(@color: @white, @alpha: 1) {
    	background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
	}
	.border(@color: @white, @alpha: 1) {
		border-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
		.background-clip(padding-box);
	}
}

//	==========================================================================================

	// Opacity
.opacity(@opacity: 100) {
	-khtml-opacity: @opacity / 100;
	  -moz-opacity: @opacity / 100;
	       opacity: @opacity / 100;
			filter: e(%("alpha(opacity=%d)", @opacity));
}

//	==========================================================================================

	// Reset filters for IE
.resetFilter() {
	filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));
}